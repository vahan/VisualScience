<?php

/*
 * @file
 * The install file for the VisualScience module. 
 * It includes:
 * - Definition of the DB tables
 * - Definition of the basic configuration for VisualScience
 */

include_once 'includes/visualscience.utils.inc';

/**
 * Implements hook_schema().
 * @return array  the created schema
 */
function visualscience_schema() {
  //table for saved searches  Seb: Keep it, just in case you need to save the searches.
 /* $schema[visualscience_get_save_table_name()] = array(
    'description' => 'Stores searches.',
    'fields' => array(
      'sid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Primary Key: Unique search ID.',
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Secondary Key: User ID who has saved the search.',
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 55,
        'default' => '',
        'description' => 'Machine readable name of this search.',
      ),
      'search' => array(
        'type' => 'varchar',
        'length' => 1024,
        'default' => '',
        'description' => 'The text of this search.',
      ),
    ),
    'primary key' => array('sid'),
    'unique keys' => array('name' => array('name'))
    );*/

//Table to save the config of visualscience search tables
$schema['visualscience_search_config'] = array(
  'description' => 'Stores VisualScience Configuration.',
  'fields' => array(
    'cid' => array(
      'type' => 'serial',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'description' => 'Primary Key: Unique Field ID.',
      ),
    'name' => array(
      'type' => 'varchar',
      'length' => 255,
      'default' => '',
      'description' => 'Machine readable name of the field.',
      ),
    'mini' => array(
      'type' => 'int',
      'unsigned' => TRUE,
      'not null' => FALSE,
      'default'  => 0,
      'size' => 'tiny',
      'description' => 'Should this field be present in the mini table ? 1 or 0',
      ),
    'full' => array(
      'type' => 'int',
      'unsigned' => TRUE,
      'not null' => FALSE,
      'default'  => 0,
      'size' => 'tiny',
      'description' => 'Should this field be present in the full table ? 1 or 0',
      ),
    'first' => array(
      'type' => 'int',
      'unsigned' => TRUE,
      'not null' => FALSE,
      'default'  => 0,
      'size' => 'tiny',
      'description' => 'Is this the First Name field ? 1 or 0',
      ),
    'last' => array(
      'type' => 'int',
      'unsigned' => TRUE,
      'not null' => FALSE,
      'default'  => 0,
      'size' => 'tiny',
      'description' => 'Is this the last name field ? 1 or 0',
      ),
    'field' => array(
      'type' => 'int',
      'unsigned' => TRUE,
      'not null' => FALSE,
      'default'  => 0,
      'size' => 'tiny',
      'description' => 'Is this field contained in field_config ? 1 or 0',
      ),
    ),
'primary key' => array('cid'),
);

  //table for uploaded files and their permissions
$schema['visualscience_uploaded_files'] = array(
 'description' => 'Uploaded Files and Permissions',
 'fields' => array(
  'fid' => array(
    'type' => 'serial',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'description' => 'Primary Key: Unique file ID.',
    ),
  'uid' => array(
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'description' => 'User Id of the user who can access the file.',
    ),
  'email' => array(
    'type' => 'varchar',
    'length' => 1024,
    'default' => '',
    'description' => 'The email of the user who can acces the file.',
    ),
  'name' => array(
    'type' => 'varchar',
    'length' => 1024,
    'default' => '',
    'description' => 'Name of the file, as uploaded by user',
    ),
  'url' => array(
    'type' => 'varchar',
    'length' => 4096,
    'default' => '',
    'description' => 'The url of the file in the private directory.(Common to each message)',
    ),
  ),
 'primary key' => array('fid')
 );

return $schema;
}

/**
 * Implements hook_uninstall().
 */
function visualscience_uninstall() {
  drupal_uninstall_schema('visualscience');
  //deleting the previously set persistent variables 
  variable_del('visualscience_user_sent_per_ajax_request');
  variable_del('visualscience_user_per_search_page');
}

/**
 * Implements hook_install().
 */
function visualscience_install() {
  //drupal_install_schema('visualscience');
  $name = new stdClass();
  $mail = new stdClass();
  $roles = new stdClass();
  $last = new stdClass();
  $first = new stdClass();

  $name->name = 'name';
  $name->mini = 1;
  $name->full = 1;
  $name->first = 1;
  $mail->last = 1;
  $name->field = 0;

  $roles->name = 'roles';
  $roles->mini = 1;
  $roles->full = 1;
  $roles->first = 0;
  $roles->field = 0;
  $mail->last = 0;

  $mail->name = 'mail';
  $mail->mini = 1;
  $mail->full = 1;
  $mail->first = 0;
  $mail->field = 0;
  $mail->last = 0;

  $first->name = 'first_name';
  $first->mini = 1;
  $first->full = 1;
  $first->first = 1;
  $first->field = 0;
  $first->last = 0;

  $last->name = 'last_name';
  $last->mini = 1;
  $last->full = 1;
  $last->first = 0;
  $last->field = 0;
  $last->last = 1;

  $exist_first = field_info_field('first_name');
  $exist_last = field_info_field('last_name');
  $exist_first_field = field_info_field('field_first_name');
  $exist_last_field = field_info_field('field_last_name');


  if ((isset($exist_first) || isset($exist_first_field)) && (isset($exist_last) || isset($exist_last_field))) {
    drupal_write_record('visualscience_search_config', $first);
    drupal_write_record('visualscience_search_config', $last);
  }
  else {
    drupal_write_record('visualscience_search_config', $name);
    drupal_write_record('visualscience_search_config', $roles);
  }
  drupal_write_record('visualscience_search_config', $mail);

  //Setting some persistent variables that can be changed in the config page.
  variable_set('visualscience_user_sent_per_ajax_request', 500);
  variable_set('visualscience_user_per_search_page', 150);

  //Settings for visibility of actionbar's buttons
  variable_set('visualscience_show_csv_button', 1);
  variable_set('visualscience_show_messages_button', 1);
  variable_set('visualscience_show_livingscience_button', 1);
  variable_set('visualscience_show_conference_button', 1);
}
